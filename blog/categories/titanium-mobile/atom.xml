<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Titanium Mobile | Nazir Doğan Code Blog]]></title>
  <link href="http://nazrdogan.github.io/blog/categories/titanium-mobile/atom.xml" rel="self"/>
  <link href="http://nazrdogan.github.io/"/>
  <updated>2018-01-14T20:36:59+03:00</updated>
  <id>http://nazrdogan.github.io/</id>
  <author>
    <name><![CDATA[Nazir Doğan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Passing Data Parent to Child Controller - Titanium Alloy]]></title>
    <link href="http://nazrdogan.github.io/blog/2015/12/24/passing-data-between-parent-to-child-controller-titanium-mobile/"/>
    <updated>2015-12-24T21:29:07+02:00</updated>
    <id>http://nazrdogan.github.io/blog/2015/12/24/passing-data-between-parent-to-child-controller-titanium-mobile</id>
    <content type="html"><![CDATA[<p>In this post , I will give small snippet about passing data parent to child controller.</p>

<pre><code>//index.js

function goDetail(e){

$.tab.open(Alloy.createController('detail',{data:e.row.title}).getView());
}
$.index.open();
</code></pre>

<pre><code>//index.xml
&lt;Alloy&gt;
    &lt;TabGroup&gt;
         &lt;Tab id="tab"&gt;
       &lt;Window onClick="goDetail" id="win" backgroundColor="white" navBarHidden="true" tabBarHidden="true"&gt;
        &lt;TableView id="table"&gt;
                &lt;TableViewRow title="Apple"/&gt;
                &lt;TableViewRow title="Bananas"/&gt;&lt;br&gt;
&lt;TableViewRow title="Carrots"/&gt;
                &lt;TableViewRow title="Potatoes"/&gt;
                 &lt;TableViewRow title="Cod"/&gt;
                &lt;TableViewRow title="Haddock"/&gt;&lt;br&gt;
&lt;/TableView&gt;
    &lt;/Window&gt;
    &lt;/Tab&gt;
    &lt;/TabGroup&gt;
&lt;/Alloy&gt;
</code></pre>

<pre><code>// detail.js
var args = arguments[0] || {};
 Ti.API.info(args.data);
  $.title.text=args.data;

//detail.xml
&lt;Alloy&gt;
    &lt;Window class="container" backgroundColor="white"&gt;
     &lt;Label top=30 id="title"&gt;&lt;Label&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;
</code></pre>

<iframe width="420" height="315" src="https://www.youtube.com/embed/qQUshuYvP1w" frameborder="0" allowfullscreen="allowfullscreen">
</iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appcelerator Titanium Mobile Türkçe Kitap]]></title>
    <link href="http://nazrdogan.github.io/blog/2015/12/07/appcelerator-titanium-mobile-turkce-kitap/"/>
    <updated>2015-12-07T20:19:17+02:00</updated>
    <id>http://nazrdogan.github.io/blog/2015/12/07/appcelerator-titanium-mobile-turkce-kitap</id>
    <content type="html"><![CDATA[<div class="ELUvyf">
<div id="body:c1641">
<div class="fu5e3b sMVRZe">
<div class="wftCae" dir="ltr">
<p>Türkçe kaynak sıkıntısından  yaklaşık 1 sene önce yazmaya başladığım Appcelerator Titanium ile Çapraz platform mobil uygulama geliştirme kitabını açık kaynak hale getirme kararı aldım. Bu kararın nedeni hem Titanium platformunda olan bir takım değişiklikler hemde gerekli düzeltmeleri yapacak zamanımın kısıtlı olması etkili oldu. Titanium'dan kısaca bahsetmek gerekirse javascript ile hem Android hem iOS, Windows phone Uygulamaları  (her ne kadar kitapta anlatılmasada) geliştirebilirsiniz.Kitabın Yazım süresi çok kısa oldugundan yazım yanlışları ve anlatım bozuklukları olabilir. Şimdiden affola.Umarım mobil geliştiren ve geliştirmek isteyenler için faydalı bir kaynak olur.</p>
<p><a class="ot-anchor aaTEdf" dir="ltr" href="https://dl.orangedox.com/GxaueHo37SlPRj6PO6/TitaniumMobile.pdf" target="_blank" rel="nofollow">https://dl.orangedox.com/GxaueHo37SlPRj6PO6/TitaniumMobile.pdf</a></p>
</div>
</div>
</div>
</div>


<div class="bldpQb"></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Titanium Alloy MVC Framework]]></title>
    <link href="http://nazrdogan.github.io/blog/2015/12/07/getting-started-titanium-alloy-mvc-framework/"/>
    <updated>2015-12-07T17:36:00+02:00</updated>
    <id>http://nazrdogan.github.io/blog/2015/12/07/getting-started-titanium-alloy-mvc-framework</id>
    <content type="html"><![CDATA[<p class="p1"><strong><span class="s1">What is Alloy ?</span></strong></p>


<p class="p1"><span class="s1">Alloy is a MVC framework by Appcelerator for developer to build cross platform application . Titanium have two way for developing mobile apps. One of them named Titanium classic and second one is Titanium alloy. You are not required to alloy framework .you can still continue classic one . But you will not have alloy benefits. </span></p>


<p class="p1"><strong><span class="s1">Let's look alloy mvc</span></strong></p>


<p class="p1"><strong>Model</strong></p>


<p class="p1"><span class="s1">The model store data local or remote.it can be SQLite , file or web service data.no matter what is data type. Model layer is doing managing or manipulating data.if you heard CRUD  you know what I'm talking about.</span></p>


<p><p class="p1">
<p class="p1"><a href="http://www.nazirdogan.com/wp-content/uploads/2015/12/Screen-Shot-2015-12-07-at-18.07.57.png"><img class="alignnone wp-image-939 size-medium" src="/assets/Screen-Shot-2015-12-07-at-18.07.57-244x300.png" alt="Screen Shot 2015-12-07 at 18.07.57" width="244" height="300" /></a></p>
<p class="p1">you can create model in project folder like this and as well as the other components.</p>
<pre class="theme:sublime-text lang:default decode:true">exports.definition = {
    config: {</p>

<pre><code>    adapter: {
        type: "sql",
        collection_name: "firstmodel"
    }
},
extendModel: function(Model) {
    _.extend(Model.prototype, {
        // extended functions and properties go here
    });

    return Model;
},
extendCollection: function(Collection) {
    _.extend(Collection.prototype, {
        // extended functions and properties go here

        // For Backbone v1.1.2, uncomment the following to override the
        // fetch method to account for a breaking change in Backbone.
        /*
        fetch: function(options) {
            options = options ? _.clone(options) : {};
            options.reset = true;
            return Backbone.Collection.prototype.fetch.call(this, options);
        }
        */
    });

    return Collection;
}
</code></pre>

<p>};</pre>
<p>&nbsp;</p>
<p class="p1"><span class="s1">The view is very simple and easy to understand .its the presentation layer of the application. Users will interact with this layer.</span>If you know xml you know alloy view . Because it&rsquo;s only xml.</p>
<pre class="theme:sublime-text lang:default decode:true ">&lt;Alloy&gt;
    &lt;Window class=&ldquo;container&rdquo;&gt;
        &lt;Label id=&ldquo;label&rdquo; onClick=&ldquo;doClick&rdquo;&gt;Hello, World&lt;/Label&gt;
    &lt;/Window&gt;
&lt;/Alloy&gt;</pre>
<p>and you can change your view style with  TSS files. its inside styles folder. TSS  similar to CSS but it uses JSON-like syntax.</p>
<pre class="theme:sublime-text lang:default decode:true">&ldquo;.container&rdquo;: {
    backgroundColor:&ldquo;white&rdquo;
}</p>

<p>&ldquo;Label&rdquo;: {
    width: Ti.UI.SIZE,
    height: Ti.UI.SIZE,
    color: &ldquo;#000&rdquo;
}</p>

<p>&ldquo;#label&rdquo;: {
    font: {
        fontSize: 12
    }
}
</pre>
<p><strong><span class="s1">Controller</span></strong></p>
<p class="p1"><span class="s1">Controller is business logic your application.its glue between model and views.</span></p>
<pre class="theme:sublime-text lang:default decode:true ">function doClick(e) {
    alert($.label.text);
}</p>

<p>$.index.open();
</pre>
<p>you can see doClick function in your view. When user interact label on device screen. doClick will work.</p>
<p>if you create Controller in your alloy project with Appcelerator Studio. Studio will create view(.xml) and style(.tss) files. and will be named same your controller.</p>
<p>For Example:  you create home.js  controller and created file home.xml and home.tss .But if you do this manually. you must add other files manually.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tizen Uygulama Geliştirme -Sertifika Oluşturma (Adım-1)]]></title>
    <link href="http://nazrdogan.github.io/blog/2013/09/04/tizen-uygulama-gelistirme-sertifika-olusturma-adim-1/"/>
    <updated>2013-09-04T07:49:57+03:00</updated>
    <id>http://nazrdogan.github.io/blog/2013/09/04/tizen-uygulama-gelistirme-sertifika-olusturma-adim-1</id>
    <content type="html"><![CDATA[<p><a href="http://nazirdogan.files.wordpress.com/2013/09/tizenide1.png"><img class="alignnone size-medium wp-image-111" alt="tizenIDE1" src="/assets/tizenide1.png?w=300" width="600" height="406" /></a></p>


<p>Tizen SDK'yi indirkten sonra ilk olarak yapmamız gereken iş  Sertifika oluşturmak. Peki neden sertifikalara ihtiyaç var derseniz.  güvenlik sebebi ile  ihtiyaç duyuyoruz.(ayrıntılı bilgi için burayı <a href="http://www.bilgiguvenligi.gov.tr/guvenlik-teknolojileri/sertifika-sertifika-olusturma-sertifika-turleri.html">okuyabilirsiniz</a>.)</p>


<p>Çünkü oluşturduğumuz özel anahtarları(private keys) uygulamalarımızı  imzalamak ve doğrulamak için kullanacağız.Ayrıca Sertifika oluşturmadan uygulamarı çalıştırmak mümkün değil.</p>


<p>Peki Nasıl Oluşturulur bu sertifika ve özel anatharlar..</p>


<p>Tizen IDE'yı açtıktan sonra menuden</p>


<p><strong>Window &gt; Preferences &gt; Tizen SDK &gt; Security Profile</strong></p>


<p>yolunu izleriz.</p>


<p><a href="http://nazirdogan.files.wordpress.com/2013/09/tizensecurityprofiles.png"><img class="alignnone size-medium wp-image-113" alt="tizensecurityprofiles" src="/assets/tizensecurityprofiles.png?w=300" width="800" height="492" /></a></p>


<p>Bu ekranı gördükten  sonra imzalı (signed) profil eklemek için  Profiles panelinden  <strong>Add 'e </strong>tıklayın.</p>


<p>Profilinize isim verdikten sonra  <strong>Generate</strong>'e tıklayın.</p>


<p><a href="http://nazirdogan.files.wordpress.com/2013/09/tizencertificate.png"><img class="alignnone size-large wp-image-120" alt="tizencertificate" src="/assets/tizencertificate.png?w=1024" width="1024" height="548" /></a></p>


<p>Gerekli alanları doldurduktan sonra <strong><br />
Apply  </strong>dedikten sonra Sertifikalarımız oluşturmuş oluyoruz.</p>


<p>Artık Proje oluşturup uygulama geliştirmeye başlayabilirsiniz.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tizen Uygulama Geliştirme (Adım 0)]]></title>
    <link href="http://nazrdogan.github.io/blog/2013/09/03/tizen-uygulama-gelistirme-adim-0/"/>
    <updated>2013-09-03T21:27:15+03:00</updated>
    <id>http://nazrdogan.github.io/blog/2013/09/03/tizen-uygulama-gelistirme-adim-0</id>
    <content type="html"><![CDATA[<p>Her platformda oldugu gibi Tizen'de de uygulama geliştirmek için bir SDK(Software Development Kit) 'e sahip.</p>


<p>Şu an en  güncel sürüm olan Tizen 2.2  SDK'yi i<a href="https://developer.tizen.org/">ndirebilirsiniz</a>.</p>


<p><a href="http://nazirdogan.files.wordpress.com/2013/09/tizensdkdownload.png"><img class="alignnone size-medium wp-image-87" alt="tizensdkdownload" src="/assets/tizensdkdownload.png?w=300" width="600" height="652" /></a></p>


<p>i<a href="http://nazirdogan.files.wordpress.com/2013/09/tizensdkdownload1.png"><img class="alignnone size-medium wp-image-91" alt="tizensdkdownload1" src="/assets/tizensdkdownload1.png?w=221" width="421" height="600" /></a></p>


<p>Tizen SDK , platform binarylerini,döküman ve örnek kodlardan oluşmakta.Ayrıca Tizen SDK ile beraber Eclipse temelli bir IDE gelmekte.<br />
Tizen IDE   Web Uygulama geliştirme aracı ve Native Uygulama geliştirme araçlarını desteklemekte.</p>


<p>Tizen IDE 'de  başka araçlarda Mevcut.(bunları tek tek diğer yazılarımda anlatacağım)</p>


<ul>
<li>Certificate Generator</li>
<li>Emulator</li>
<li>Smart Development Bridge</li>
<li>UI customizer</li>
</ul>


<p>Ayrıca Tizen IDE'de  hem Web hem Native uygulamalar için birçok örnek Mevcut.</p>


<p>(Zamanla buraya uygulamalarla ilgili nasıl yapılır gibi bilgiler gelecek)</p>

]]></content>
  </entry>
  
</feed>
